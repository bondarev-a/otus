apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        app: postgresdb
    spec:
      containers:
        - name: postgresdb
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            #- name: PGHOST
            #  valueFrom:
            #    configMapKeyRef:
            #      name: db-user-config
            #      key: PGHOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-user-config
                  key: PGDATABASE
            - name: POSTGRES_USER
              valueFrom: 
                secretKeyRef:
                  name: db-user-secret
                  key: PGUSER
            - name: POSTGRES_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: db-user-secret
                  key: PGPASSWORD
          #command: ["psql", "--command"]
          #args:
            #- "CREATE ROLE IF NOT EXISTS profi LOGIN password 'profi1' SUPERUSER"
              #CREATE DATABASE IF NOT EXISTS logins WITH OWNER = profi ENCODING = 'UTF8' CONNECTION LIMIT = -1 IS_TEMPLATE = False;
          volumeMounts:
            - mountPath: /var/lib/postgres/data
              name: db-data
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-persistent-volume-claim